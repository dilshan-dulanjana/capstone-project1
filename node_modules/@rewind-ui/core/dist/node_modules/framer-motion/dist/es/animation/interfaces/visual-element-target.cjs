"use strict";var e=require("../../render/html/utils/transform.cjs"),t=require("../optimized-appear/data-id.cjs"),a=require("./motion-value.cjs"),n=require("../../value/use-will-change/is.cjs"),i=require("../../render/utils/setters.cjs"),r=require("../../frameloop/frame.cjs");function o({protectedKeys:e,needsAnimating:t},a){const n=e.hasOwnProperty(a)&&!0!==t[a];return t[a]=!1,n}exports.animateTarget=function(s,l,{delay:u=0,transitionOverride:d,type:m}={}){let{transition:c=s.getDefaultTransition(),transitionEnd:p,...f}=s.makeTargetAnimatable(l);const g=s.getValue("willChange");d&&(c=d);const h=[],A=m&&s.animationState&&s.animationState.getState()[m];for(const i in f){const l=s.getValue(i),d=f[i];if(!l||void 0===d||A&&o(A,i))continue;const m={delay:u,elapsed:0,...c};if(window.HandoffAppearAnimations&&!l.hasAnimated){const e=s.getProps()[t.optimizedAppearDataAttribute];e&&(m.elapsed=window.HandoffAppearAnimations(e,i,l,r.frame))}l.start(a.animateMotionValue(i,l,d,s.shouldReduceMotion&&e.transformProps.has(i)?{type:!1}:m));const p=l.animation;n.isWillChangeMotionValue(g)&&(g.add(i),p.then((()=>g.remove(i)))),h.push(p)}return p&&Promise.all(h).then((()=>{p&&i.setTarget(s,p)})),h};
