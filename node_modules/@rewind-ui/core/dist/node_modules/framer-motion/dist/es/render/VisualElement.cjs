"use strict";var t=require("../utils/errors.cjs"),e=require("../projection/geometry/models.cjs"),i=require("../utils/is-ref-object.cjs"),s=require("../utils/reduced-motion/index.cjs"),r=require("../utils/reduced-motion/state.cjs"),n=require("../utils/subscription-manager.cjs"),o=require("../value/index.cjs"),a=require("../value/use-will-change/is.cjs"),u=require("../value/utils/is-motion-value.cjs"),h=require("./html/utils/transform.cjs"),l=require("./utils/is-controlling-variants.cjs"),p=require("./utils/is-variant-label.cjs"),d=require("./utils/motion-values.cjs"),c=require("./utils/resolve-variants.cjs"),v=require("../utils/warn-once.cjs"),m=require("../motion/features/definitions.cjs"),V=require("./utils/variant-props.cjs"),g=require("./store.cjs"),f=require("../frameloop/frame.cjs");const j=Object.keys(m.featureDefinitions),M=j.length,y=["AnimationStart","AnimationComplete","Update","BeforeLayoutMeasure","LayoutMeasure","LayoutAnimationStart","LayoutAnimationComplete"],C=V.variantProps.length;exports.VisualElement=class{constructor({parent:t,props:e,presenceContext:i,reducedMotionConfig:s,visualState:r},n={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify("Update",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.scheduleRender=()=>f.frame.render(this.render,!1,!0);const{latestValues:o,renderState:h}=r;this.latestValues=o,this.baseTarget={...o},this.initialValues=e.initial?{...o}:{},this.renderState=h,this.parent=t,this.props=e,this.presenceContext=i,this.depth=t?t.depth+1:0,this.reducedMotionConfig=s,this.options=n,this.isControllingVariants=l.isControllingVariants(e),this.isVariantNode=l.isVariantNode(e),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=Boolean(t&&t.current);const{willChange:p,...d}=this.scrapeMotionValuesFromProps(e,{});for(const t in d){const e=d[t];void 0!==o[t]&&u.isMotionValue(e)&&(e.set(o[t],!1),a.isWillChangeMotionValue(p)&&p.add(t))}}scrapeMotionValuesFromProps(t,e){return{}}mount(t){this.current=t,g.visualElementStore.set(t,this),this.projection&&!this.projection.instance&&this.projection.mount(t),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((t,e)=>this.bindToMotionValue(e,t))),r.hasReducedMotionListener.current||s.initPrefersReducedMotion(),this.shouldReduceMotion="never"!==this.reducedMotionConfig&&("always"===this.reducedMotionConfig||r.prefersReducedMotion.current),"production"!==process.env.NODE_ENV&&v.warnOnce(!0!==this.shouldReduceMotion,"You have Reduced Motion enabled on your device. Animations may not appear as expected."),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){g.visualElementStore.delete(this.current),this.projection&&this.projection.unmount(),f.cancelFrame(this.notifyUpdate),f.cancelFrame(this.render),this.valueSubscriptions.forEach((t=>t())),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const t in this.events)this.events[t].clear();for(const t in this.features)this.features[t].unmount();this.current=null}bindToMotionValue(t,e){const i=h.transformProps.has(t),s=e.on("change",(e=>{this.latestValues[t]=e,this.props.onUpdate&&f.frame.update(this.notifyUpdate,!1,!0),i&&this.projection&&(this.projection.isTransformDirty=!0)})),r=e.on("renderRequest",this.scheduleRender);this.valueSubscriptions.set(t,(()=>{s(),r()}))}sortNodePosition(t){return this.current&&this.sortInstanceNodePosition&&this.type===t.type?this.sortInstanceNodePosition(this.current,t.current):0}loadFeatures({children:e,...s},r,n,o){let a,u;if("production"!==process.env.NODE_ENV&&n&&r){const e="You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.";s.ignoreStrict?t.warning(!1,e):t.invariant(!1,e)}for(let t=0;t<M;t++){const e=j[t],{isEnabled:i,Feature:r,ProjectionNode:n,MeasureLayout:o}=m.featureDefinitions[e];n&&(a=n),i(s)&&(!this.features[e]&&r&&(this.features[e]=new r(this)),o&&(u=o))}if(!this.projection&&a){this.projection=new a(this.latestValues,this.parent&&this.parent.projection);const{layoutId:t,layout:e,drag:r,dragConstraints:n,layoutScroll:u,layoutRoot:h}=s;this.projection.setOptions({layoutId:t,layout:e,alwaysMeasureLayout:Boolean(r)||n&&i.isRefObject(n),visualElement:this,scheduleRender:()=>this.scheduleRender(),animationType:"string"==typeof e?e:"both",initialPromotionConfig:o,layoutScroll:u,layoutRoot:h})}return u}updateFeatures(){for(const t in this.features){const e=this.features[t];e.isMounted?e.update():(e.mount(),e.isMounted=!0)}}triggerBuild(){this.build(this.renderState,this.latestValues,this.options,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):e.createBox()}getStaticValue(t){return this.latestValues[t]}setStaticValue(t,e){this.latestValues[t]=e}makeTargetAnimatable(t,e=!0){return this.makeTargetAnimatableFromInstance(t,this.props,e)}update(t,e){(t.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=t,this.prevPresenceContext=this.presenceContext,this.presenceContext=e;for(let e=0;e<y.length;e++){const i=y[e];this.propEventSubscriptions[i]&&(this.propEventSubscriptions[i](),delete this.propEventSubscriptions[i]);const s=t["on"+i];s&&(this.propEventSubscriptions[i]=this.on(i,s))}this.prevMotionValues=d.updateMotionValuesFromProps(this,this.scrapeMotionValuesFromProps(t,this.prevProps),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(t){return this.props.variants?this.props.variants[t]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}getVariantContext(t=!1){if(t)return this.parent?this.parent.getVariantContext():void 0;if(!this.isControllingVariants){const t=this.parent&&this.parent.getVariantContext()||{};return void 0!==this.props.initial&&(t.initial=this.props.initial),t}const e={};for(let t=0;t<C;t++){const i=V.variantProps[t],s=this.props[i];(p.isVariantLabel(s)||!1===s)&&(e[i]=s)}return e}addVariantChild(t){const e=this.getClosestVariantNode();if(e)return e.variantChildren&&e.variantChildren.add(t),()=>e.variantChildren.delete(t)}addValue(t,e){e!==this.values.get(t)&&(this.removeValue(t),this.bindToMotionValue(t,e)),this.values.set(t,e),this.latestValues[t]=e.get()}removeValue(t){this.values.delete(t);const e=this.valueSubscriptions.get(t);e&&(e(),this.valueSubscriptions.delete(t)),delete this.latestValues[t],this.removeValueFromRenderState(t,this.renderState)}hasValue(t){return this.values.has(t)}getValue(t,e){if(this.props.values&&this.props.values[t])return this.props.values[t];let i=this.values.get(t);return void 0===i&&void 0!==e&&(i=o.motionValue(e,{owner:this}),this.addValue(t,i)),i}readValue(t){var e;return void 0===this.latestValues[t]&&this.current?null!==(e=this.getBaseTargetFromProps(this.props,t))&&void 0!==e?e:this.readValueFromInstance(this.current,t,this.options):this.latestValues[t]}setBaseTarget(t,e){this.baseTarget[t]=e}getBaseTarget(t){var e;const{initial:i}=this.props,s="string"==typeof i||"object"==typeof i?null===(e=c.resolveVariantFromProps(this.props,i))||void 0===e?void 0:e[t]:void 0;if(i&&void 0!==s)return s;const r=this.getBaseTargetFromProps(this.props,t);return void 0===r||u.isMotionValue(r)?void 0!==this.initialValues[t]&&void 0===s?void 0:this.baseTarget[t]:r}on(t,e){return this.events[t]||(this.events[t]=new n.SubscriptionManager),this.events[t].add(e)}notify(t,...e){this.events[t]&&this.events[t].notify(...e)}};
