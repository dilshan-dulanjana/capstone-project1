import e,{useContext as o}from"react";import{usePresence as t}from"../../../components/AnimatePresence/use-presence.js";import{LayoutGroupContext as r}from"../../../context/LayoutGroupContext.js";import{SwitchLayoutGroupContext as s}from"../../../context/SwitchLayoutGroupContext.js";import{globalProjectionState as i}from"../../../projection/node/state.js";import{correctBorderRadius as n}from"../../../projection/styles/scale-border-radius.js";import{correctBoxShadow as p}from"../../../projection/styles/scale-box-shadow.js";import{addScaleCorrector as a}from"../../../projection/styles/scale-correction.js";import{frame as m}from"../../../frameloop/frame.js";class d extends e.Component{componentDidMount(){const{visualElement:e,layoutGroup:o,switchLayoutGroup:t,layoutId:r}=this.props,{projection:s}=e;a(c),s&&(o.group&&o.group.add(s),t&&t.register&&r&&t.register(s),s.root.didUpdate(),s.addEventListener("animationComplete",(()=>{this.safeToRemove()})),s.setOptions({...s.options,onExitComplete:()=>this.safeToRemove()})),i.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:o,visualElement:t,drag:r,isPresent:s}=this.props,i=t.projection;return i?(i.isPresent=s,r||e.layoutDependency!==o||void 0===o?i.willUpdate():this.safeToRemove(),e.isPresent!==s&&(s?i.promote():i.relegate()||m.postRender((()=>{const e=i.getStack();e&&e.members.length||this.safeToRemove()}))),null):null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),queueMicrotask((()=>{!e.currentAnimation&&e.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:e,layoutGroup:o,switchLayoutGroup:t}=this.props,{projection:r}=e;r&&(r.scheduleCheckAfterUnmount(),o&&o.group&&o.group.remove(r),t&&t.deregister&&t.deregister(r))}safeToRemove(){const{safeToRemove:e}=this.props;e&&e()}render(){return null}}function u(i){const[n,p]=t(),a=o(r);return e.createElement(d,{...i,layoutGroup:a,switchLayoutGroup:o(s),isPresent:n,safeToRemove:p})}const c={borderRadius:{...n,applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]},borderTopLeftRadius:n,borderTopRightRadius:n,borderBottomLeftRadius:n,borderBottomRightRadius:n,boxShadow:p};export{u as MeasureLayout};
