"use strict";var e=require("../../../utils/errors.cjs"),r=require("../../../utils/is-numerical-string.cjs"),t=require("./is-css-variable.cjs");const n=/var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;function i(e){const r=n.exec(e);if(!r)return[,];const[,t,i]=r;return[t,i]}const a=4;function s(n,c,o=1){e.invariant(o<=a,`Max CSS variable fallback depth detected in property "${n}". This may indicate a circular fallback dependency.`);const[u,l]=i(n);if(!u)return;const f=window.getComputedStyle(c).getPropertyValue(u);if(f){const e=f.trim();return r.isNumericalString(e)?parseFloat(e):e}return t.isCSSVariableToken(l)?s(l,c,o+1):l}exports.parseCSSVariable=i,exports.resolveCSSVariables=function(e,{...r},n){const i=e.current;if(!(i instanceof Element))return{target:r,transitionEnd:n};n&&(n={...n}),e.values.forEach((e=>{const r=e.get();if(!t.isCSSVariableToken(r))return;const n=s(r,i);n&&e.set(n)}));for(const e in r){const a=r[e];if(!t.isCSSVariableToken(a))continue;const c=s(a,i);c&&(r[e]=c,n||(n={}),void 0===n[e]&&(n[e]=a))}return{target:r,transitionEnd:n}};
