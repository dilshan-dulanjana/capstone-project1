import{animateStyle as e}from"./index.js";import{isWaapiSupportedEasing as t}from"./easing.js";import{getFinalKeyframe as r}from"./utils/get-final-keyframe.js";import{animateValue as o}from"../js/index.js";import{millisecondsToSeconds as i,secondsToMilliseconds as n}from"../../../utils/time-conversion.js";import{memo as a}from"../../../utils/memo.js";import{noop as s}from"../../../utils/noop.js";import{frame as l,cancelFrame as m}from"../../../frameloop/frame.js";const p=a((()=>Object.hasOwnProperty.call(Element.prototype,"animate"))),u=new Set(["opacity","clipPath","filter","transform","backgroundColor"]);function c(a,c,{onUpdate:f,onComplete:d,...y}){if(!(p()&&u.has(c)&&!y.repeatDelay&&"mirror"!==y.repeatType&&0!==y.damping&&"inertia"!==y.type))return!1;let h,j,g=!1;const k=()=>{j=new Promise((e=>{h=e}))};k();let{keyframes:v,duration:b=300,ease:T,times:w}=y;if(((e,r)=>"spring"===r.type||"backgroundColor"===e||!t(r.ease))(c,y)){const e=o({...y,repeat:0,delay:0});let t={done:!1,value:v[0]};const r=[];let i=0;for(;!t.done&&i<2e4;)t=e.sample(i),r.push(t.value),i+=10;w=void 0,v=r,b=i-10,T="linear"}const x=e(a.owner.current,c,v,{...y,duration:b,ease:T,times:w}),C=()=>x.cancel(),P=()=>{l.update(C),h(),k()};x.onfinish=()=>{a.set(r(v,y)),d&&d(),P()};return{then:(e,t)=>j.then(e,t),attachTimeline:e=>(x.timeline=e,x.onfinish=null,s),get time(){return i(x.currentTime||0)},set time(e){x.currentTime=n(e)},get speed(){return x.playbackRate},set speed(e){x.playbackRate=e},get duration(){return i(b)},play:()=>{g||(x.play(),m(C))},pause:()=>x.pause(),stop:()=>{if(g=!0,"idle"===x.playState)return;const{currentTime:e}=x;if(e){const t=o({...y,autoplay:!1});a.setWithVelocity(t.sample(e-10).value,t.sample(e).value,10)}P()},complete:()=>x.finish(),cancel:P}}export{c as createAcceleratedAnimation};
