import{createRenderStep as e}from"./render-step.js";const s=["prepare","read","update","preRender","render","postRender"];function r(r,t){let c=!1,n=!0;const o={delta:0,timestamp:0,isProcessing:!1},a=s.reduce(((s,r)=>(s[r]=e((()=>c=!0)),s)),{}),i=e=>a[e].process(o),p=()=>{const e=performance.now();c=!1,o.delta=n?1e3/60:Math.max(Math.min(e-o.timestamp,40),1),o.timestamp=e,o.isProcessing=!0,s.forEach(i),o.isProcessing=!1,c&&t&&(n=!1,r(p))};return{schedule:s.reduce(((e,s)=>{const t=a[s];return e[s]=(e,s=!1,a=!1)=>(c||(c=!0,n=!0,o.isProcessing||r(p)),t.schedule(e,s,a)),e}),{}),cancel:e=>s.forEach((s=>a[s].cancel(e))),state:o,steps:a}}export{r as createRenderBatcher,s as stepsOrder};
