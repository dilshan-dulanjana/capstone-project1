import{PanSession as e}from"./PanSession.js";import{addPointerEvent as n}from"../../events/add-pointer-event.js";import{Feature as o}from"../../motion/features/Feature.js";import{noop as t}from"../../utils/noop.js";import{frame as s}from"../../frameloop/frame.js";const r=e=>(n,o)=>{e&&s.update((()=>e(n,o)))};class i extends o{constructor(){super(...arguments),this.removePointerDownListener=t}onPointerDown(n){this.session=new e(n,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint()})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:n,onPan:o,onPanEnd:t}=this.node.getProps();return{onSessionStart:r(e),onStart:r(n),onMove:o,onEnd:(e,n)=>{delete this.session,t&&s.update((()=>t(e,n)))}}}mount(){this.removePointerDownListener=n(this.node.current,"pointerdown",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}export{i as PanGesture};
