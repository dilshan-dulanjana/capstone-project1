'use client';
"use strict";var e=require("react/jsx-runtime"),i=require("./use-tooltip.hook.cjs"),t=require("@floating-ui/react"),s=require("../../theme/theme.context.cjs"),o=require("../../utils/usePropId.cjs"),r=require("react"),a=require("tailwind-merge");const l={color:"dark",initiallyOpen:!1,offset:6,placement:"top",radius:"lg",shadow:"none",size:"sm",tone:"solid",withinPortal:!0},n=r.forwardRef(((n,c)=>{const u=s.useComponentTheme("Tooltip"),{tone:d,children:p,className:m="",color:f,initiallyOpen:g,label:h,offset:w,placement:j,radius:x,shadow:y,size:b,withinPortal:N}=Object.assign(Object.assign({},l),n),O=o.usePropId(n.id),[q,P]=r.useState(!g),[F,T]=r.useState(null),{arrowRef:v,arrowSide:R,context:S,floating:z,getFloatingProps:M,getReferenceProps:k,open:C,reference:E,strategy:I,x:A,y:B}=i.useTooltip({initiallyOpen:g,offset:w,placement:j});r.useEffect((()=>{F&&clearTimeout(F),T(setTimeout((()=>P(!C)),C?0:75))}),[C]);const D=r.Children.only(p),G=t.useMergeRefs([z,c||null]),H=r.useMemo((()=>a.twMerge(u.base({tone:d,arrowSide:R,className:m,color:f,open:C,radius:x,shadow:y,size:b}))),[d,R,m,f,C,x,y,b,u]),J=!q&&e.jsxs("div",Object.assign({id:O,ref:G,className:H,role:"dialog","aria-modal":"true","aria-hidden":!C,style:{position:I,top:B&&B>0&&!isNaN(B)&&isFinite(B)?B:0,left:A&&A>0&&!isNaN(A)&&isFinite(A)?A:0,visibility:null==A?"hidden":"visible"}},{children:[S.x&&S.y&&e.jsx(t.FloatingArrow,{className:u.arrow({tone:d,color:f}),ref:v,width:8,height:4,context:S}),h]})),K=r.cloneElement(D,Object.assign(Object.assign({ref:E},D.props),k));return e.jsxs(e.Fragment,{children:[N?e.jsx(t.FloatingPortal,{children:J}):J,K]})}));n.displayName="Tooltip",module.exports=n;
