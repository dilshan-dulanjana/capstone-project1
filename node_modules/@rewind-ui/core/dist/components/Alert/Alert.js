'use client';
import{__rest as s}from"tslib";import{jsx as i,jsxs as e}from"react/jsx-runtime";import{useFade as o}from"../../animations/use-fade.hook.js";import{ErrorIcon as r}from"../../icons/Error.js";import{InfoIcon as a}from"../../icons/Info.js";import{QuestionIcon as n}from"../../icons/Question.js";import{SuccessIcon as t}from"../../icons/Success.js";import{WarningIcon as c}from"../../icons/Warning.js";import{useComponentTheme as l}from"../../theme/theme.context.js";import{useComponentVariant as m}from"../../theme/variant.context.js";import{usePropId as d}from"../../utils/usePropId.js";import{forwardRef as p,useState as f,useRef as b,useMemo as h}from"react";import{XMarkIcon as j}from"../../icons/XMark.js";import{twMerge as u}from"tailwind-merge";import{useMergeRefs as g}from"@floating-ui/react";import N from"../Spinner/Spinner.js";const w={accent:"none",color:"dark",dismissable:!1,dismissableAnimation:!0,radius:"lg",shadow:"none",shadowColor:"none",size:"sm",tone:"light"},O={error:i(r,{}),info:i(a,{}),question:i(n,{}),success:i(t,{}),warning:i(c,{}),loading:i(N,{size:"xl"})},z=p(((r,a)=>{const n=m("Alert",r.variant),t=l("Alert"),c=Object.assign(Object.assign(Object.assign({},w),n),r),{accent:p,children:N,className:z="",color:v,dismissable:C,dismissableAnimation:x=!1,icon:A,iconType:k,radius:y,shadow:W,shadowColor:I,size:S,title:T,tone:q,variant:E}=c,M=s(c,["accent","children","className","color","dismissable","dismissableAnimation","icon","iconType","radius","shadow","shadowColor","size","title","tone","variant"]),[P,Q]=f(!0),X=b(null),B=g([a||null,X]);o({ref:X,visible:P,enabled:x});const D=h((()=>u(t.base({accent:p,className:z,color:v,radius:y,shadow:W,shadowColor:I,size:S,tone:q}))),[t,p,z,v,y,W,I,S,q]),F=d(r.id);return e("div",Object.assign({id:F,role:"alert",ref:B,className:D},M,{children:[(A||k)&&i("span",Object.assign({className:t.iconWrapper()},{children:k?O[k]:A})),e("div",Object.assign({className:t.infoWrapper({size:S})},{children:[T&&i("span",Object.assign({className:t.title({size:S,color:v,tone:q})},{children:T})),N&&i("span",Object.assign({className:t.text()},{children:N}))]})),C&&i("button",Object.assign({type:"button","aria-label":"Close alert",role:"button",title:"Close alert",className:t.iconWrapper(),onClick:()=>Q(!1)},{children:i(j,{className:t.dismissIcon({size:S})})}))]}))}));z.displayName="Alert";export{z as default};
